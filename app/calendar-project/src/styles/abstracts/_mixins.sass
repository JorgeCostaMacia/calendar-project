/// Font size in rem
/// @author Jorge Costa Maci치
/// @param {number} $fontValue
/// @param {number} $fontValueBase [16] - Base html font size
@mixin font-size($font-value: map-get($fonts, "size"), $font-value-base: 16)
  font-size: $font-value + px
  font-size: font-size($font-value, $font-value-base)

/// Font face
/// @author Jorge Costa Maci치
/// @param {string} $fontName
/// @param {string} $fileName
/// @param {string} $weight [normal]
/// @param {string} $style [normal]
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal)
  @font-face
    font-family: quote($font-name)
    src: url($file-name + '.eot')
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
    src: url($file-name + '.woff') format('woff'),
    src: url($file-name + '.ttf')  format('truetype'),
    src: url($file-name + '.svg##{$font-name}')  format('svg')
    font-weight: $weight
    font-style: $style

@mixin svg-size($svg-value: map-get($fonts, "size"), $font-value-base: 16)
  width: svg-size($svg-value, $font-value-base)
  height: svg-size($svg-value, $font-value-base)

@mixin centerObject($horizontal: true, $vertical: true)
  @if $horizontal and $vertical
    top: 50%
    left: 50%
    position: absolute
    transform: translate(-50%, -50%)
  @else if $horizontal
    left: 50%
    position: absolute
    transform: translateX(-50%)
  @else if $vertical
    top: 50%
    position: absolute
    transform: translateY(-50%)

@mixin centerFlexbox($both: true, $vertical: true)
  display: flex
  @if $both
    align-items: center
    vertical-align: middle
    justify-content: center
  @else if $both == false and $vertical
    flex-direction: column
    justify-content: center

@mixin placeholder()
  &::-webkit-input-placeholder,
  &:-moz-placeholder,
  &::-moz-placeholder,
  &:-ms-input-placeholder
    @content

@mixin mq-min-lg()
  @media (min-width: (map-get($breackpoints, "min-lg") / 16) + rem)
    @content

@mixin mq-min-md()
  @media (min-width: (map-get($breackpoints, "min-md") / 16) + rem)
    @content

@mixin mq-min-sm()
  @media (min-width: (map-get($breackpoints, "min-sm") / 16) + rem)
    @content

@mixin mq-min-xs()
  @media (min-width: (map-get($breackpoints, "min-xs") / 16) + rem)
    @content

@mixin mq-max-lg()
  @media (max-width: (map-get($breackpoints, "max-lg") / 16) + rem)
    @content

@mixin mq-max-md()
  @media (max-width: (map-get($breackpoints, "max-md") / 16) + rem)
    @content

@mixin mq-max-sm()
  @media (max-width: (map-get($breackpoints, "max-sm") / 16) + rem)
    @content

@mixin mq-max-xs()
  @media (max-width: (map-get($breackpoints, "max-xs") / 16) + rem)
    @content

@mixin mq-min($value, $width: true)
  @if $width
    @media (min-width: ($value / 16) + rem)
      @content
  @else
    @media (min-height: ($value / 16) + rem)
      @content

@mixin mq-max($value, $width: true)
  @if $width
    @media (max-width: ($value / 16) + rem)
      @content
  @else
    @media (max-height: ($value / 16) + rem)
      @content

@mixin mq-between($min-value, $max-value, $width: true)
  $min-value: $min-value / 16
  $max-value: $max-value / 16
  @if $width
    @media (min-width: $min-value + rem) and (max-width: $max-value + rem)
      @content
  @else
    @media (min-height: $min-value + rem) and (max-height: $max-value + rem)
      @content

@mixin clearfix()
  zoom: 1
  &:before, &:after
    content: " "
    display: table
  &:after
    clear: both

@mixin keyframes($animation-name)
  @-webkit-keyframes #{$animation-name}
    @content
  @-moz-keyframes #{$animation-name}
    @content
  @-ms-keyframes #{$animation-name}
    @content
  @-o-keyframes #{$animation-name}
    @content
  @keyframes #{$animation-name}
    @content

@mixin animation($str)
  -webkit-animation: #{$str}
  -moz-animation: #{$str}
  -ms-animation: #{$str}
  -o-animation: #{$str}
  animation: #{$str}

@mixin image-2x($image, $width, $height)
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6/2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
    background-image: url($image)
    background-size: $width $height

@mixin bg-gradient($start-color, $end-color, $orientation)
  background: $start-color
  @if $orientation == 'vertical'
    background: -webkit-linear-gradient(top, $start-color, $end-color)
    background: linear-gradient(to bottom, $start-color, $end-color)
  @else if $orientation == 'horizontal'
    background: -webkit-linear-gradient(left, $start-color, $end-color)
    background: linear-gradient(to right, $start-color, $end-color)
  @else
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color)
    background: radial-gradient(ellipse at center, $start-color, $end-color)

@mixin padding($top, $right, $bottom, $left)
  padding: $top $right $bottom $left

@mixin margin($top, $right, $bottom, $left)
  margin: $top $right $bottom $left

/// Event wrapper
/// @author Jorge Costa Maci치
/// @param {Bool} $self [false] - Whether or not to include current selector
@mixin on-event($self: false)
  @if $self
    &,
    &:hover,
    &:active,
    &:focus
      @content
  @else
    &:hover,
    &:active,
    &:focus
      @content

/// Make a context based selector a little more friendly
/// @author Jorge Costa Maci치
/// @param {String} $context
@mixin when-inside($context)
  #{$context} &
    @content
